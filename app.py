import streamlit as st
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestRegressor
import joblib

# Load the trained model
model = joblib.load("rf_model.pkl")

# Constant lagged rate value
constant_lagged_rate = 1800  # Replace with your desired constant value

# Streamlit app
def main():
    st.title("Rate Prediction App")

    # Get user inputs
    material = st.text_input("Enter Material/Service Code:")
    prediction_date = st.date_input("Select Prediction Date:")
    
    if st.button("Predict"):
        # Validate input material (replace with your actual list of materials)
        valid_materials = [30177041,
30177043,
30177045,
30183899,
30188205,
30191997,
30233248,
30289279,
30377002,
30377003,
30379289,
30379320,
30186689,
30186690,
30186692,
30186693,
30186694,
30186697,
30186698,
30186700,
30186701,
30186730,
30188207,
30188208,
30188220,
30188221,
30188352,
30188810,
30186696,
30233247,
30186702,
30186720,
30186737,
30186727,
30252090,
30267211,
30271799,
30292420,
30302167,
30315769,
30301493,
30301494,
30327104,
30322904,
30322903,
30322906,
30322907,
30322909,
30322905,
30342776,
30368571,
30186724,
30374530,
30378490,
30379842,
30381768,
30244601,
30243489,
30243539,
30243571,
30244614,
30244640,
30245342,
30243545,
30243546,
30243484,
30243540,
30243550,
30243559,
30243560,
30243578,
30243598,
30243658,
30243961,
30244800,
30245341,
30244419,
30244553,
30244576,
30244577,
30244580,
30244583,
30244584,
30244604,
30244627,
30243493,
30243522,
30243558,
30244813,
30243572,
30243591,
30243593,
30243597,
30243646,
30243680,
30244615,
30244796,
30243503,
30243504,
30243514,
30243515,
30243534,
30243536,
30243538,
30244061,
30244073,
30244781,
30244820,
30243482,
30244582,
30243485,
30243494,
30243529,
30243551,
30244359,
30244044,
30244071,
30244075,
30243541,
30243875,
30244021,
30244026,
30244120,
30244130,
30244133,
30243498,
30243526,
30243596,
30243641,
30243675,
30243912,
30243934,
30244103,
30244117,
30244119,
30244121,
30244126,
30244267,
30244400,
30244454,
30244496,
30244497,
30244520,
30244546,
30244554,
30244555,
30244563,
30244564,
30244570,
30244599,
30244600,
30244603,
30244621,
30244622,
30244623,
30244815,
30244017,
30244037,
30243542,
30244230,
30243483,
30243490,
30243521,
30243523,
30243535,
30243537,
30243979,
30244083,
30243502,
30243821,
30243849,
30243850,
30243860,
30243862,
30243937,
30243939,
30243945,
30244182,
30244534,
30243566,
30243585,
30243487,
30243510,
30244123,
30244132,
30243685,
30243817,
30244022,
30244025,
30244030,
30244035,
30244055,
30244131,
30243949,
30244548,
30244558,
30244561,
30244566,
30244602,
30244420,
30244422,
30244191,
30244192,
30244193,
30244194,
30244557,
30244770,
30243583,
30243833,
30243876,
30243891,
30243901,
30243905,
30243906,
30243926,
30244372,
30244384,
30244398,
30244408,
30244453,
30244624,
30244631,
30243557,
30243589,
30243632,
30243662,
30243678,
30243547,
30243575,
30243595,
30243654,
30243968,
30244031,
30244096,
30244100,
30244101,
30244113,
30244195,
30244208,
30244209,
30244210,
30244231,
30244235,
30244494,
30244581,
30244773,
30243543,
30244040,
30244052,
30244053,
30244057,
30244060,
30243499,
30243518,
30243519,
30244046,
30244080,
30243908,
30244448,
30244565,
30244568,
30244571,
30244578,
30244016,
30243676,
30243940,
30243942,
30243943,
30244108,
30244216,
30244498,
30244510,
30244523,
30244524,
30244526,
30244549,
30244562,
30244794,
30243679,
30244375,
30244450,
30244632,
30243828,
30243877,
30244020,
30244054,
30244109,
30244183,
30244373,
30244525,
30243628,
30243938,
30244207,
30244219,
30244227,
30244522,
30244541,
30244542,
30244550,
30244559,
30243880,
30243486,
30243488,
30244234,
30244350,
30244612,
30243611,
30243612,
30244447,
30244605,
30244763,
30243640,
30243834,
30243835,
30243881,
30243902,
30244509,
30244105,
30243501,
30243517,
30243520,
30243790,
30244489,
30244492,
30243496,
30243548,
30243617,
30243936,
30244050,
30244058,
30244095,
30244097,
30244127,
30244136,
30244137,
30244138,
30244155,
30244156,
30244158,
30244181,
30244220,
30244269,
30244500,
30244539,
30244758,
30243907,
30243931,
30243932,
30243935,
30244636,
30244757,
30243812,
30244536,
30243544,
30243962,
30244028,
30244432,
30244481,
30244484,
30243995,
30244406,
30243491,
30243576,
30244610,
30244816,
30243791,
30243928,
30244019,
30244032,
30244038,
30244824,
30244023,
30244349,
30243874,
30243929,
30244042,
30244047,
30244258,
30244260,
30244368,
30244479,
30244609,
30244639,
30244417,
30244761,
30243555,
30243648,
30243825,
30243879,
30243898,
30243911,
30243914,
30244065,
30244102,
30244663,
30244741,
30244211,
30244630,
30244001,
30244041,
30243631,
30243797,
30243952,
30244759,
30243492,
30244774,
30244089,
30244077,
30244151,
30244342,
30244397,
30244431,
30243788,
30243556,
30243824,
30243892,
30244079,
30244116,
30244212,
30244063,
30244081,
30244111,
30244273,
30244298,
30244301,
30244313,
30243616,
30243621,
30243784,
30243786,
30243787,
30244045,
30244048,
30244036,
30243625,
30244000,
30244034,
30244217,
30243681,
30244619,
30244150,
30244547,
30244575,
30243779,
30243820,
30243836,
30243837,
30244421,
30244449,
30244452,
30244504,
30244508,
30244511,
30244556,
30244560,
30243634,
30243785,
30243792,
30243832,
30243944,
30244043,
30244062,
30244154,
30244171,
30244190,
30244573,
30244801,
30243495,
30243629,
30243829,
30243894,
30244170,
30244501,
30243599,
30244535,
30244094,
30243505,
30243579,
30243592,
30243630,
30243660,
30243686,
30243783,
30244064,
30244128,
30244229,
30244278,
30244280,
30244574,
30244585,
30244765,
30244740,
30243689,
30243793,
30244664,
30243885,
30244591,
30243554,
30243647,
30243851,
30243967,
30243976,
30244618,
30244516,
30244517,
30244135,
30244186,
30243573,
30243668,
30244114,
30243669,
30243778,
30243796,
30243867,
30243872,
30243882,
30243883,
30244091,
30244107,
30244175,
30244203,
30244233,
30244402,
30244403,
30244416,
30244451,
30244529,
30244543,
30244579,
30244826,
30243594,
30243633,
30243651,
30244206,
30244345,
30244346,
30244348,
30243913,
30244039,
30244134,
30244300,
30244347,
30244795,
30243622,
30243822,
30243873,
30243915,
30244146,
30244148,
30244153,
30244166,
30244169,
30244277,
30244825,
30244441,
30243524,
30243527,
30243925,
30244598,
30244769,
30243620,
30244641,
30243506,
30244528,
30244572,
30243582,
30244341,
30244404,
30244436,
30244788,
30244467,
30243794,
30244480,
30244540,
30243698,
30244051,
30244245,
30244771,
30244607,
30244782,
30244786,
30243886,
30243789,
30244798,
30243683,
30244270,
30244307,
30243497,
30244344,
30244428,
30244429,
30244271,
30244275,
30244281,
30244304,
30243618,
30244483,
30243684,
30243947,
30243966,
30244265,
30244274,
30244279,
30244283,
30244297,
30244306,
30244309,
30244785,
30244805,
30243903,
30243919,
30244002,
30244305,
30243677,
30243827,
30244099,
30244162,
30243775,
30243963,
30244324,
30244818,
30243511,
30243623,
30243811,
30243819,
30243866,
30244142,
30243922,
30244282,
30243955,
30244143,
30244532,
30243869,
30243893,
30243601,
30243897,
30244802,
30243831,
30243956,
30243974,
30243590,
30243652,
30243664,
30244748,
30243500,
30243516,
30243666,
30244070,
30244167,
30244322,
30244353,
30244365,
30244457,
30243508,
30243584,
30244320,
30244334,
30244351,
30244364,
30243532,
30244586,
30244115,
30244272,
30244393,
30244551,
30243533,
30243642,
30244374,
30244376,
30244378,
30244379,
30244380,
30244382,
30244383,
30244385,
30244386,
30244388,
30244478,
30244237,
30244491,
30243826,
30243603,
30243624,
30244152,
30244352,
30244407,
30244608,
30243509,
30244395,
30243950,
30243951,
30244018,
30244787,
30244552,
30252392,
30252424,
30252425,
30252426,
30252427,
30252446,
30252450,
30252708,
30252349,
30252403,
30252407,
30252411,
30252393,
30252402,
30252348,
30252662,
30252666,
30252670,
30252675,
30252677,
30252678,
30252680,
30252683,
30252688,
30252693,
30252661,
30252665,
30252669,
30252671,
30252679,
30252668,
30252673,
30252682,
30252690,
30252691,
30252692,
30252696,
30252383,
30252404,
30252405,
30252406,
30252408,
30252409,
30252410,
30252412,
30252413,
30252435,
30252436,
30252437,
30252438,
30252439,
30252475,
30252664,
30252695,
30252416,
30252448,
30252458,
30252748,
30252382,
30252390,
30252457,
30252459,
30252378,
30252385,
30252454,
30252456,
30252803,
30252464,
30252494,
30252709,
30252379,
30252743,
30252744,
30252681,
30252432,
30252747,
30252663,
30252684,
30252694,
30252381,
30252805,
30252711,
30252715,
30252712,
30252719,
30252720,
30252723,
30252667,
30252476,
30252714,
30252722,
30252465,
30252495,
30252491,
30252492,
30252493,
30252451,
30252473,
30252482,
30252483,
30252497,
30252397,
30252414,
30252415,
30252431,
30252433,
30252391,
30252417,
30252418,
30252419,
30252771,
30252481,
30252484,
30252689,
30252697,
30252844,
30252488,
30252685,
30252507,
30252489,
30252686,
30252485,
30252674,
30252421,
30252487,
30252516,
30252519,
30252767,
30252746,
30252396,
30252479,
30252422,
30252429,
30252525,
30252779,
30252502,
30252765,
30252768,
30252672,
30252717,
30252718,
30252778,
30252572,
30252772,
30252801,
30252370,
30252837,
30252699,
30252700,
30252698,
30252565,
30252553,
30252577,
30252561,
30252562,
30252574,
30252774,
30252776,
30252777,
30252800,
30252463,
30252563,
30252701,
30322723,
30252766,
30252395,
30252850,
30252394,
30252478,
30252575,
30252702,
30252434,
30252745,
30252710,
30252676,
30252467,
30252725,
30252523,
30252790,
30367948,
30252501,
30252761,
30252517,
30367557,
30367744,
30367747,
30367751,
30367752,
30367760,
30367774,
30367775,
30367785,
30367931,
30367935,
30252752,
30367746,
30367754,
30367756,
30367770,
30367741,
30367918,
30367932,
30252570,
30252573,
30252703,
30367734,
30367900,
30252462,
30252817,
30367755,
30367757,
30367758,
30367765,
30367766,
30367787,
30367801,
30367717,
30367719,
30367769,
30367776,
30367762,
30367788,
30367790,
30367781,
30367906,
30368522,
30368523,
30368524,
30252430,
30367907,
30367901,
30367780,
30367789,
30252428,
30367736,
30367742,
30367791,
30252455,
30367749,
30367713,
30367726,
30252496,
30367753,
30252704,
30367903,
30367768,
30367800,
30367920,
30252742,
30252809,
30367748,
30367763,
30367908,
30367905,
30252528,
30252791,
30367778,
30252749,
30367902,
30367804,
30252470,
30252770,
30367792,
30367745,
30367909,
30367759,
30367761,
30367814,
30367740,
30367772,
30252833,
30367737,
30367922,
30252524,
30367739,
30367793,
30367712,
30367944,
30367945,
30367810,
30367946,
30252687,
30367735,
30367783,
30387054,
30252543,
30381846,
30386926,
30387059,
30387060,
30252535,
30367738,
30367771,
30367923,
30381847,
30251773,
30255578,
30255579,
30255580,
30255591,
30255592,
30255594,
30255664,
30255674,
30251772,
30255577,
30255581,
30255595,
30255630,
30255631,
30255659,
30255673,
30255582,
30255599,
30255602,
30255603,
30255604,
30255605,
30255607,
30255608,
30255609,
30255610,
30255611,
30255612,
30255613,
30255624,
30255637,
30255658,
30255597,
30255601,
30255606,
30255614,
30255615,
30255616,
30255617,
30255619,
30255626,
30255627,
30255628,
30255639,
30255649,
30255653,
30255660,
30255668,
30255583,
30255625,
30255598,
30255620,
30255623,
30255644,
30255648,
30255652,
30255665,
30255584,
30255663,
30255647,
30255600,
30255622,
30255632,
30255654,
30255666,
30255646,
30255618,
30255645,
30255667,
30255621,
30255650,
30255672,
30255587,
30255634,
30255698,
30255641,
30255588,
30251774,
30255596,
30255643,
30255589,
30251775,
30331688,
30367460,
30367462,
30367463,
30367465,
30367474,
30367512,
30367511,
30367489,
30367448,
30367454,
30367455,
30367457,
30367458,
30367456,
30367449,
30367450,
30367451,
30367452,
30367506,
30367516,
30251776,
30255670,
30255671,
30375889,
30375920,
30352818,
30367492,
30367525,
30367526,
30367529,
30367530,
30367510,
30386009,
30386014,
30386010,
30251777,
30289548,
30292667,
30297730,
30299156,
30303498,
30305374,
30322818,
30330436,
30381858,
30265432,
30265433,
30265434,
30265435,
30265436,
30265437,
30265438,
30265439,
30265440,
30265442,
30265443,
30265460,
30265461,
30265462,
30265463,
30265464,
30265465,
30265466,
30265467,
30265468,
30265469,
30265470,
30265471,
30265488,
30265489,
30265490,
30265491,
30265492,
30265493,
30265494,
30265495,
30265496,
30265497,
30265498,
30265499,
30265500,
30265501,
30265502,
30265503,
30265516,
30265517,
30265518,
30265519,
30265520,
30265521,
30265522,
30265523,
30265524,
30265525,
30265526,
30265527,
30265528,
30265529,
30265530,
30265446,
30265447,
30265474,
30265475,
30265444,
30265472,
30299138,
30299139,
30299160,
30299161,
30299162,
30299163,
30299164,
30299165,
30299166,
30299167,
30299168,
30265569,
30265441,
30265448,
30265449,
30265450,
30265451,
30265452,
30265453,
30265454,
30265455,
30265456,
30265457,
30265458,
30265459,
30265478,
30265479,
30265480,
30265481,
30265482,
30265483,
30265484,
30265485,
30265486,
30265487,
30265504,
30265505,
30265506,
30265508,
30265509,
30265512,
30265513,
30265532,
30265533,
30265534,
30265536,
30265537,
30265540,
30265541,
30265476,
30265477,
30265445,
30265473,
30174573,
30268162,
30268244,
30268245,
30268247,
30268248,
30268250,
30268251,
30268253,
30268259,
30268261,
30268266,
30268605,
30271499,
30271501,
30271505,
30271507,
30271515,
30271521,
30271523,
30271525,
30271535,
30271537,
30271538,
30271540,
30271541,
30268604,
30268262,
30268263,
30268275,
30268258,
30268264,
30268270,
30271513,
30268249,
30271622,
30271497,
30268274,
30268254,
30271539,
30271542,
30299106,
30268267,
30268265,
30268281,
30126388,
30271519,
30271517,
30270105,
30270106,
30270107,
30270121,
30270124,
30270129,
30270137,
30270143,
30270154,
30270161,
30270163,
30270168,
30270173,
30271464,
30271468,
30271469,
30271552,
30280660,
30270139,
30270144,
30270147,
30270152,
30270172,
30270174,
30270183,
30270104,
30270130,
30270170,
30270177,
30270109,
30271467,
30271551,
30268304,
30271573,
30270182,
30271585,
30270189,
30270134,
30271583,
30270169,
30332383,
30332386,
30270126,
30270171,
30332381,
30332385,
30369325,
30332384,
30332382,
30375623,
30270125,
30385649,
30302502,
30302503,
30302512,
30302535,
30302536,
30302545,
30302555,
30302556,
30302573,
30305285,
30302501,
30302550,
30302574,
30302516,
30302625,
30302628,
30302633,
30302504,
30302505,
30302579,
30302560,
30302540,
30302554,
30302557,
30302543,
30302538,
30302546,
30324675,
30302559,
30305286,
30302558,
30302580,
30302517,
30302528,
30302506,
30302507,
30302539,
30302592,
30302509,
30302510,
30302598,
30302610,
30369317,
30302564,
30375545,
30302553,
30302520,
30379756,
30302531,
30302525,
30385633,
30302524,
30302519,
30302533,
30304005,
30304008,
30304006,
30304007,
30304010,
30327560,
30329818,
30340800,
30369356,
30324346,
30324348,
30324349,
30340847,
30369355,
30326826,
30326827,
30368858,
30350925,
30350934,
30376103]  # Example list
        
        try:
            material = int(material)
            if material not in valid_materials:
                st.error("Invalid Material/Service Code. Please enter a valid code.")
                return
        except ValueError:
            st.error("Invalid Material/Service Code. Please enter a valid code.")
            return
    
        # Prepare input data for prediction
        input_data = {
            "Material/Service": [material],
            "Year": [prediction_date.year],
            "Month": [prediction_date.month],
            "Lagged_Rate": 1  # Use the constant lagged rate
        }
        
        input_df = pd.DataFrame(input_data)
        
        # Predict rate
        predicted_rate = model.predict(input_df)
        
        # Display prediction result
        st.write(f"Predicted Rate for Material {material} on {prediction_date}: {predicted_rate[0]:.2f}")

if __name__ == "__main__":
    main()
